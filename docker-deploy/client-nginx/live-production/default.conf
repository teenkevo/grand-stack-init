upstream ui_live_prod {
    server ui_live_prod:3000;
}

upstream api_live_prod {
    server api_live_prod:5000;
}

# redirect non-SSL traffic for app.com and www.app.com to SSL
server {
    listen 80;
    server_name app.com www.app.com; # server_name here

    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location / {
        return 301 https://www.app.com$request_uri;
    }
}

# 1. Spin up the api container in --no-deps mode and then 
# 2. Run init-letsencrypt.sh generate certs in staging mode.
# 3. If successful -> change staging=0 in script and generate real certs.
# 4. Reload nginx container to pick up fresh certificates.
# 5. Generate symlinks for neo4j certs (check README.md at
#    /docker-deploy/neo4j/certificates)
# 6. Spin up db in --no-deps mode.
# 6. Spin up api in --no-deps mode.


# redirect app.com to SSL www.app.com
server {
    listen 443 ssl;
    server_name app.com;

    ssl_certificate         /etc/letsencrypt/live/app.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/app.com/privkey.pem;
    include                 /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam             /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        return 301 https://www.app.com$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name www.app.com;
    client_max_body_size 100M;

    # Gzip Settings
    gzip on;
    gzip_static on; # allows pre-serving of .gz file if it exists 
    gzip_disable "msie6"; # Disable for user-agent Internet explorer 6. Not supported.
    gzip_proxied any; # enable gzip for all proxied requests
    gzip_buffers 16 8k; # number and size of buffers to compress a response
    gzip_http_version 1.1;
    gzip_min_length 256; # Only gzip files of size in bytes
    gzip_types text/plain text/css text/html application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
    gunzip on; # Uncompress on the fly

    ssl_certificate         /etc/letsencrypt/live/app.com/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/app.com/privkey.pem;
    include                 /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam             /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        # to redirect all the requests to index.html,
        # useful when you are using react-router
        try_files $uri $uri/ /index.html =404;
    }

    location /graphql {
        proxy_pass http://api_live_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Proto https; # additional
        proxy_set_header X-Url-Scheme $scheme; # additional
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # additional
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;

    }
}
